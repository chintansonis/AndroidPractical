plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.chintanandroidpractical'
    compileSdk 32

    defaultConfig {
        applicationId "com.example.chintanandroidpractical"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi"]
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'

    // Lifecycle libraries
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    //need to remove
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.navigation:navigation-runtime-ktx:2.4.1'

    // Compose libraries
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.navigation:navigation-compose:2.5.0-alpha02"
    //last added
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
        // compose insets
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"

//    //last added
//    implementation "androidx.compose.foundation:foundation:$compose_version"
//    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"




    // room libraries
    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Hilt libraries
    implementation "com.google.dagger:hilt-android:$hilt_core_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_core_version"
    //need to remove
    kapt "androidx.hilt:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltComposeNavigation_version"

    //retrofit
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.github.skydoves:sandwich:$sandwich_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpInterceptor_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // image loading
    implementation "com.github.skydoves:landscapist-coil:$coil_version"

    // whatIf
    implementation "com.github.skydoves:whatif:$what_if_version"

    //need to remove
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    //test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    //integration test
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.1.0"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_core_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_core_version"
}